/*
 * Nezokep.java
 *
 * Created on 2005. április 26., 0:29
 */

package hu.wfs.vonalkod.gui.alkAblak;

import hu.wfs.vonalkod.nyomtatas.VonalkodSeged;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.font.TextLayout;
import java.awt.geom.AffineTransform;
import java.awt.geom.GeneralPath;
import net.sourceforge.barbecue.Barcode;

/**
 *
 * @author  Béci
 */
public class Nezokep extends javax.swing.JPanel {
	
	/** Creates new form Nezokep */
	public Nezokep() {
		initComponents();
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());

    }
    // </editor-fold>//GEN-END:initComponents
	
	public void setVonalkód(Barcode _vonalkód) {
		if (_vonalkód!=null&&_vonalkód==vonalkód)
			return;
		vonalkód=_vonalkód;
		revalidate();
		repaint();
	}
	
	private  Barcode vonalkód;

	protected void paintComponent(java.awt.Graphics g) {
		super.paintComponent(g);
		Graphics2D g2=(Graphics2D)g;	
		if (vonalkód!=null) {
			VonalkodSeged.rajzolásVonalkód(
				g2, vonalkód, 
				(getWidth()-getWidth()*0.95d)/2d, 
				(getHeight()-getHeight()*0.85d)/2d, 
				getWidth()*0.95d, getHeight()*0.85d);
		} else {
			g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);			
			TextLayout szöveg=new TextLayout(
				"Nincsen kiválasztott elem!",
				new Font("Times New Roman",Font.BOLD,25),
				g2.getFontRenderContext());
			GeneralPath szövegPath=(GeneralPath)szöveg.getOutline(new AffineTransform());
			double maxW=szövegPath.getBounds2D().getWidth()/0.8d;
			double maxH=szövegPath.getBounds2D().getHeight()/0.8d;
			double arányX=1;
			double arányY=1;
			if (maxW>getWidth()) {
				arányX=(double)getWidth()/maxW;
				arányY=arányX;
			}
			AffineTransform aff=new AffineTransform();
			aff.scale(arányX, arányY);
			szövegPath.transform(aff);
			aff=new AffineTransform();
			aff.translate(
				(getWidth()-szövegPath.getBounds2D().getWidth())/2-szövegPath.getBounds2D().getMinX(),
				(getHeight()-szövegPath.getBounds2D().getHeight())/2-szövegPath.getBounds2D().getMinY());
			szövegPath.transform(aff);
			g2.fill(szövegPath);
		}
	}

	
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
	
}
