/*
 * Oldalbeallitas.java
 *
 * Created on 2005. április 15., 15:04
 */

package hu.wfs.vonalkod.gui.oldalbeallitas;

import hu.wfs.vonalkod.konfiguracio.Konfiguracio;
import hu.wfs.vonalkod.modell.Oldalbeallitas;
import hu.wfs.vonalkod.shared.Utils;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;

import javax.swing.SpinnerNumberModel;

/**
 *
 * @author  Béci
 */
public class Oldalbeallitas_tlp extends javax.swing.JPanel {
	
	/** Creates new form Oldalbeallitas */
	public Oldalbeallitas_tlp() {
		initComponents();
		init_Tulajdonságszerkesztõk();
	}
	
	private void init_Tulajdonságszerkesztõk() {
		setSpinnerNumberModel_cm(new JSpinner[] {				
					spnr_CímkeSzélesség,
					spnr_MargókAlsó,
					spnr_MargókBal,
					spnr_MargókBal,
					spnr_MargókFelsõ,
					spnr_MargókJobb,
					spnr_PapírMagasság,					
					spnr_PapírSzélesség
		});
		setSpinnerNumberModel_mm(new JSpinner[] {
			spnr_CímkeVízszintesKöz,
					spnr_CímkeFüggõlegesKöz,
					spnr_CímkeOszlopokSzáma,
					spnr_CímkeSorokSzáma
		});
		
		// cimkemagasság beállítása
		SpinnerNumberModel modell=new SpinnerNumberModel(
				new Double(2),new Double(2),new Double(Float.MAX_VALUE), new Double(1));
		spnr_CímkeMagasság.setModel(modell);							
	}
	
	private void setSpinnerNumberModel_cm(JSpinner[] spinner) {
		for (int i=0;i<spinner.length;i++) {
			SpinnerNumberModel modell=new SpinnerNumberModel(
					new Double(0),new Double(0),new Double(Float.MAX_VALUE), new Double(1));
			spinner[i].setModel(modell);
		}
	}
	
	private void setSpinnerNumberModel_mm(JSpinner[] spinner) {
		for (int i=0;i<spinner.length;i++) {
			SpinnerNumberModel modell=new SpinnerNumberModel(
					new Integer(0),new Integer(0),new Integer(Integer.MAX_VALUE), new Integer(1));
			spinner[i].setModel(modell);
		}
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel3 = new javax.swing.JPanel();
        gmb_Megnyitás = new javax.swing.JButton();
        gmb_Mentés = new javax.swing.JButton();
        gmb_Mégsem = new javax.swing.JButton();
        gmb_Rendben = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel13 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jPanel29 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        spnr_MargókFelsõ = new javax.swing.JSpinner();
        jPanel30 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        spnr_MargókAlsó = new javax.swing.JSpinner();
        jPanel31 = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        spnr_MargókJobb = new javax.swing.JSpinner();
        jPanel32 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        spnr_MargókBal = new javax.swing.JSpinner();
        jLabel17 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel15 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        spnr_PapírMagasság = new javax.swing.JSpinner();
        jPanel26 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        spnr_PapírSzélesség = new javax.swing.JSpinner();
        jPanel6 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        spnr_CímkeSzélesség = new javax.swing.JSpinner();
        jLabel30 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        spnr_CímkeMagasság = new javax.swing.JSpinner();
        jPanel23 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        spnr_CímkeFüggõlegesKöz = new javax.swing.JSpinner();
        jPanel27 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        spnr_CímkeVízszintesKöz = new javax.swing.JSpinner();
        jPanel28 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        spnr_CímkeSorokSzáma = new javax.swing.JSpinner();
        jPanel24 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        spnr_CímkeOszlopokSzáma = new javax.swing.JSpinner();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setPreferredSize(new java.awt.Dimension(10, 35));
        gmb_Megnyitás.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hu/wfs/vonalkod/eroforrasok/megnyitas.png")));
        gmb_Megnyitás.setPreferredSize(new java.awt.Dimension(28, 28));
        gmb_Megnyitás.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gmb_MegnyitásActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 6);
        jPanel3.add(gmb_Megnyitás, gridBagConstraints);

        gmb_Mentés.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hu/wfs/vonalkod/eroforrasok/mentes.png")));
        gmb_Mentés.setPreferredSize(new java.awt.Dimension(28, 28));
        gmb_Mentés.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gmb_MentésActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(gmb_Mentés, gridBagConstraints);

        gmb_Mégsem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hu/wfs/vonalkod/eroforrasok/vissza.png")));
        gmb_Mégsem.setText("M\u00e9gsem");
        gmb_Mégsem.setFocusCycleRoot(true);
        gmb_Mégsem.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gmb_Mégsem.setPreferredSize(new java.awt.Dimension(100, 25));
        gmb_Mégsem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gmb_MégsemActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(gmb_Mégsem, gridBagConstraints);

        gmb_Rendben.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hu/wfs/vonalkod/eroforrasok/ok.png")));
        gmb_Rendben.setText("Rendben");
        gmb_Rendben.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gmb_Rendben.setPreferredSize(new java.awt.Dimension(100, 25));
        gmb_Rendben.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gmb_RendbenActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(gmb_Rendben, gridBagConstraints);

        add(jPanel3, java.awt.BorderLayout.SOUTH);

        jPanel10.setLayout(new java.awt.GridBagLayout());

        jPanel10.setPreferredSize(new java.awt.Dimension(300, 200));
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jPanel11.setBackground(new java.awt.Color(153, 255, 0));
        jPanel11.setOpaque(false);
        jPanel11.setPreferredSize(new java.awt.Dimension(0, 0));
        jLabel14.setText("Pap\u00edr");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel11.add(jLabel14, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel11.add(jSeparator1, gridBagConstraints);

        jPanel13.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Bal:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel13.add(jLabel2, gridBagConstraints);

        jLabel15.setText("Fels\u0151:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 13, 1, 1);
        jPanel13.add(jLabel15, gridBagConstraints);

        jLabel22.setText("Als\u00f3:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 13, 1, 1);
        jPanel13.add(jLabel22, gridBagConstraints);

        jLabel23.setText("Jobb:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel13.add(jLabel23, gridBagConstraints);

        jPanel29.setLayout(new java.awt.GridBagLayout());

        jLabel42.setText("cm");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel29.add(jLabel42, gridBagConstraints);

        spnr_MargókFelsõ.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel29.add(spnr_MargókFelsõ, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel13.add(jPanel29, gridBagConstraints);

        jPanel30.setLayout(new java.awt.GridBagLayout());

        jLabel43.setText("cm");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel30.add(jLabel43, gridBagConstraints);

        spnr_MargókAlsó.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel30.add(spnr_MargókAlsó, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel13.add(jPanel30, gridBagConstraints);

        jPanel31.setLayout(new java.awt.GridBagLayout());

        jLabel44.setText("cm");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel31.add(jLabel44, gridBagConstraints);

        spnr_MargókJobb.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel31.add(spnr_MargókJobb, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel13.add(jPanel31, gridBagConstraints);

        jPanel32.setLayout(new java.awt.GridBagLayout());

        jLabel45.setText("cm");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel32.add(jLabel45, gridBagConstraints);

        spnr_MargókBal.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel32.add(spnr_MargókBal, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel13.add(jPanel32, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 5, 1, 0);
        jPanel11.add(jPanel13, gridBagConstraints);

        jLabel17.setText("Marg\u00f3k");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(9, 1, 1, 1);
        jPanel11.add(jLabel17, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel11.add(jSeparator2, gridBagConstraints);

        jPanel15.setLayout(new java.awt.GridBagLayout());

        jLabel18.setText("Sz\u00e9less\u00e9g:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel15.add(jLabel18, gridBagConstraints);

        jLabel20.setText("Magass\u00e1g:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel15.add(jLabel20, gridBagConstraints);

        jPanel25.setLayout(new java.awt.GridBagLayout());

        jLabel36.setText("cm");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel25.add(jLabel36, gridBagConstraints);

        spnr_PapírMagasság.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel25.add(spnr_PapírMagasság, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel15.add(jPanel25, gridBagConstraints);

        jPanel26.setLayout(new java.awt.GridBagLayout());

        jLabel39.setText("cm");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel26.add(jLabel39, gridBagConstraints);

        spnr_PapírSzélesség.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel26.add(spnr_PapírSzélesség, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel15.add(jPanel26, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 5, 1, 0);
        jPanel11.add(jPanel15, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weighty = 9.0;
        jPanel11.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 55.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 10, 0, 5);
        jPanel10.add(jPanel11, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBackground(new java.awt.Color(255, 255, 0));
        jPanel5.setOpaque(false);
        jPanel5.setPreferredSize(new java.awt.Dimension(0, 0));
        jLabel27.setText("Cimke");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel5.add(jLabel27, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel5.add(jSeparator3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel28.setText("Sz\u00e9less\u00e9g:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel4.add(jLabel28, gridBagConstraints);

        jPanel21.setLayout(new java.awt.GridBagLayout());

        jLabel29.setText("cm");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel21.add(jLabel29, gridBagConstraints);

        spnr_CímkeSzélesség.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel21.add(spnr_CímkeSzélesség, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel4.add(jPanel21, gridBagConstraints);

        jLabel30.setText("Magass\u00e1g:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel4.add(jLabel30, gridBagConstraints);

        jLabel32.setText("F\u00fcgg\u0151leges k\u00f6z:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel4.add(jLabel32, gridBagConstraints);

        jLabel33.setText("Oszlopok sz\u00e1ma:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel4.add(jLabel33, gridBagConstraints);

        jLabel37.setText("Sorok sz\u00e1ma:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel4.add(jLabel37, gridBagConstraints);

        jLabel38.setText("V\u00edzszintes k\u00f6z:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel4.add(jLabel38, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel4.add(jPanel1, gridBagConstraints);

        jPanel22.setLayout(new java.awt.GridBagLayout());

        jLabel31.setText("cm");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel22.add(jLabel31, gridBagConstraints);

        spnr_CímkeMagasság.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel22.add(spnr_CímkeMagasság, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel4.add(jPanel22, gridBagConstraints);

        jPanel23.setLayout(new java.awt.GridBagLayout());

        jLabel34.setForeground(new java.awt.Color(204, 0, 0));
        jLabel34.setText("mm");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel23.add(jLabel34, gridBagConstraints);

        spnr_CímkeFüggõlegesKöz.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel23.add(spnr_CímkeFüggõlegesKöz, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel4.add(jPanel23, gridBagConstraints);

        jPanel27.setLayout(new java.awt.GridBagLayout());

        jLabel40.setForeground(new java.awt.Color(204, 0, 0));
        jLabel40.setText("mm");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel27.add(jLabel40, gridBagConstraints);

        spnr_CímkeVízszintesKöz.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel27.add(spnr_CímkeVízszintesKöz, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel4.add(jPanel27, gridBagConstraints);

        jPanel28.setLayout(new java.awt.GridBagLayout());

        jLabel41.setText("db");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel28.add(jLabel41, gridBagConstraints);

        spnr_CímkeSorokSzáma.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel28.add(spnr_CímkeSorokSzáma, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel4.add(jPanel28, gridBagConstraints);

        jPanel24.setLayout(new java.awt.GridBagLayout());

        jLabel35.setText("db");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel24.add(jLabel35, gridBagConstraints);

        spnr_CímkeOszlopokSzáma.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel24.add(spnr_CímkeOszlopokSzáma, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel4.add(jPanel24, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weighty = 9.0;
        jPanel5.add(jPanel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 45.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 10, 0, 10);
        jPanel10.add(jPanel5, gridBagConstraints);

        add(jPanel10, java.awt.BorderLayout.CENTER);

        jLabel1.setBackground(new java.awt.Color(102, 102, 102));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hu/wfs/vonalkod/eroforrasok/Oldalbeallitas02.png")));
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153)));
        jLabel1.setMaximumSize(new java.awt.Dimension(437, 200));
        jLabel1.setMinimumSize(new java.awt.Dimension(437, 200));
        jLabel1.setOpaque(true);
        jLabel1.setPreferredSize(new java.awt.Dimension(437, 200));
        jLabel1.setRequestFocusEnabled(false);
        add(jLabel1, java.awt.BorderLayout.NORTH);

    }//GEN-END:initComponents
	
	private void gmb_MegnyitásActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gmb_MegnyitásActionPerformed
		String utolsóMentésiLibStr=Konfiguracio.getTulajdonságok().getProperty("oldalBeallitasDlgUtolsoLib");
		File utolsóMentésiLib=null;
		if (utolsóMentésiLibStr!=null&&!utolsóMentésiLibStr.equals(""))
			utolsóMentésiLib=new File(utolsóMentésiLibStr);
		JFileChooser openFájlVálasztó=new JFileChooser();
		openFájlVálasztó.setDialogTitle("Megnyitás");
		if (
			utolsóMentésiLib!=null&&
			utolsóMentésiLib.exists()&&
			utolsóMentésiLib.isDirectory()
		)
			openFájlVálasztó.setCurrentDirectory(utolsóMentésiLib);
		int rst=openFájlVálasztó.showOpenDialog(this);
		if (rst==JFileChooser.APPROVE_OPTION) {
			try {
				Oldalbeallitas oldalbeallitas=
					Oldalbeallitas.betöltés(openFájlVálasztó.getSelectedFile());
				setOldalbeállítás(oldalbeallitas);
				Konfiguracio.getTulajdonságok().setProperty(
						"oldalBeallitasDlgUtolsoLib",
						openFájlVálasztó.getSelectedFile().getParent());
				Konfiguracio.mentés();
			} catch (Throwable kiv) {
				Utils.hibaÜzenet(this,"Hiba a megnyitáskor!",kiv);
				return;
			}
			JOptionPane.showMessageDialog(this,"Sikeres megnyitás!", "Üzenet", JOptionPane.INFORMATION_MESSAGE);
		}
	}//GEN-LAST:event_gmb_MegnyitásActionPerformed

public void setOldalbeállítás(Oldalbeallitas oldalbeállítás) {
	try {
		spnr_CímkeFüggõlegesKöz
				.setValue(new Integer((int)oldalbeállítás.cimkeFüggõlegesKöz));
		spnr_CímkeVízszintesKöz
				.setValue(new Integer((int)oldalbeállítás.cimkeVízszintesKöz));
		
		spnr_CímkeMagasság
				.setValue(new Double(oldalbeállítás.cimkeMagasság/10));
		spnr_CímkeOszlopokSzáma
				.setValue(new Integer(oldalbeállítás.cimkeOszlopokSzáma));
		spnr_CímkeSorokSzáma
				.setValue(new Integer(oldalbeállítás.cimkeSorokSzáma));
		spnr_CímkeSzélesség
				.setValue(new Double(oldalbeállítás.cimkeSzélesség/10));
		
		spnr_MargókAlsó
				.setValue(new Double(oldalbeállítás.margóAlsó/10));
		spnr_MargókBal
				.setValue(new Double(oldalbeállítás.margóBal/10));
		spnr_MargókFelsõ
				.setValue(new Double(oldalbeállítás.margóFelsõ/10));
		spnr_MargókJobb
				.setValue(new Double(oldalbeállítás.margóJobb/10));
		spnr_PapírMagasság
				.setValue(new Double(oldalbeállítás.papírMagasság/10));
		spnr_PapírSzélesség
				.setValue(new Double(oldalbeállítás.papírszélesség/10));
	} catch (Throwable kiv) {
		Utils.hibaÜzenet(this,"A szerkesztõk beállítása sikertelen!");
	}
}

	private void gmb_RendbenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gmb_RendbenActionPerformed
		if (ellenõrzés()==true) {
			fireActionListenerActionPerformed(evt);
		}
	}//GEN-LAST:event_gmb_RendbenActionPerformed
	
	private void gmb_MégsemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gmb_MégsemActionPerformed
		fireActionListenerActionPerformed(evt);
	}//GEN-LAST:event_gmb_MégsemActionPerformed
	
	private void gmb_MentésActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gmb_MentésActionPerformed
		if (ellenõrzés()!=true) {
			Utils.hibaÜzenet(this,"A mentés sikertelen!");
			return;
		}
		String utolsóMentésiLibStr=Konfiguracio.getTulajdonságok().getProperty("oldalBeallitasDlgUtolsoLib");
		File utolsóMentésiLib=null;
		if (utolsóMentésiLibStr!=null&&!utolsóMentésiLibStr.equals(""))
			utolsóMentésiLib=new File(utolsóMentésiLibStr);
		JFileChooser mentésiFájlVálasztó=new JFileChooser();
		mentésiFájlVálasztó.setDialogTitle("Mentés");
		if (
				utolsóMentésiLib!=null&&
				utolsóMentésiLib.exists()&&
				utolsóMentésiLib.isDirectory()
				)
			mentésiFájlVálasztó.setCurrentDirectory(utolsóMentésiLib);
		int rst=mentésiFájlVálasztó.showSaveDialog(this);
		if (rst==JFileChooser.APPROVE_OPTION) {
			Oldalbeallitas oldalBeállítás=getOldalbeállítás();
			if (oldalBeállítás!=null) {
				try {
					getOldalbeállítás().mentés(mentésiFájlVálasztó.getSelectedFile());
					Konfiguracio.getTulajdonságok().setProperty(
							"oldalBeallitasDlgUtolsoLib",
							mentésiFájlVálasztó.getSelectedFile().getParent());
					Konfiguracio.mentés();
				} catch (Throwable kiv) {
					Utils.hibaÜzenet(this,"Hiba a mentéskor!",kiv);
					return;
				}
				JOptionPane.showMessageDialog(this,"Sikeres mentés!", "Üzenet", JOptionPane.INFORMATION_MESSAGE);
			}
		}
	}//GEN-LAST:event_gmb_MentésActionPerformed
	
	private boolean ellenõrzés() {
		Oldalbeallitas beállítás=getOldalbeállítás();
		if (beállítás.isÉrvényesFüggõlegesen()!=true) {
			Utils.hibaÜzenet(this,"Hiba! A függõleges beállítások érvénytelenek!");
			return false;
		}
		if (beállítás.isÉrvényesVízszintesen()!=true) {
			Utils.hibaÜzenet(this,"Hiba! A vízszintes beállítások érvénytelenek!");
			return false;
		}
		return true;
	}
	
	public Oldalbeallitas getOldalbeállítás()  {
		Oldalbeallitas beállítás=new Oldalbeallitas();
		beállítás.cimkeFüggõlegesKöz=
				getSpinnerValueAsInteger(spnr_CímkeFüggõlegesKöz);
		beállítás.cimkeMagasság=
				getSpinnerValueAsDouble(spnr_CímkeMagasság)*10;
		beállítás.cimkeOszlopokSzáma=(int)
		getSpinnerValueAsInteger(spnr_CímkeOszlopokSzáma);
		beállítás.cimkeSorokSzáma=(int)
		getSpinnerValueAsInteger(spnr_CímkeSorokSzáma);
		beállítás.cimkeSzélesség=
				getSpinnerValueAsDouble(spnr_CímkeSzélesség)*10;
		beállítás.cimkeVízszintesKöz=
				getSpinnerValueAsInteger(spnr_CímkeVízszintesKöz);
		beállítás.margóAlsó=
				getSpinnerValueAsDouble(spnr_MargókAlsó)*10;
		beállítás.margóBal=
				getSpinnerValueAsDouble(spnr_MargókBal)*10;
		beállítás.margóFelsõ=
				getSpinnerValueAsDouble(spnr_MargókFelsõ)*10;
		beállítás.margóJobb=
				getSpinnerValueAsDouble(spnr_MargókJobb)*10;
		beállítás.papírMagasság=
				getSpinnerValueAsDouble(spnr_PapírMagasság)*10;
		beállítás.papírszélesség=
				getSpinnerValueAsDouble(spnr_PapírSzélesség)*10;
		return beállítás;
	}
	
	private int getSpinnerValueAsInteger(JSpinner spinner) {
		int érték=0;
		try {
			if (spinner.getValue()==null)
				return érték;
			return ((Integer)spinner.getValue()).intValue();
		} catch (Throwable kiv) {
			Utils.hibaÜzenet(this, "Hiba az oldalbeállítás lekérdezésekor!",kiv);
		}
		return érték;
	}
	
	private double getSpinnerValueAsDouble(JSpinner spinner) {
		double érték=0;
		try {
			if (spinner.getValue()==null)
				return érték;
			return ((Double)spinner.getValue()).doubleValue();
		} catch (Throwable kiv) {
			Utils.hibaÜzenet(this, "Hiba az oldalbeállítás lekérdezésekor!",kiv);
		}
		return érték;
	}
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton gmb_Megnyitás;
    private javax.swing.JButton gmb_Mentés;
    private javax.swing.JButton gmb_Mégsem;
    private javax.swing.JButton gmb_Rendben;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSpinner spnr_CímkeFüggõlegesKöz;
    private javax.swing.JSpinner spnr_CímkeMagasság;
    private javax.swing.JSpinner spnr_CímkeOszlopokSzáma;
    private javax.swing.JSpinner spnr_CímkeSorokSzáma;
    private javax.swing.JSpinner spnr_CímkeSzélesség;
    private javax.swing.JSpinner spnr_CímkeVízszintesKöz;
    private javax.swing.JSpinner spnr_MargókAlsó;
    private javax.swing.JSpinner spnr_MargókBal;
    private javax.swing.JSpinner spnr_MargókFelsõ;
    private javax.swing.JSpinner spnr_MargókJobb;
    private javax.swing.JSpinner spnr_PapírMagasság;
    private javax.swing.JSpinner spnr_PapírSzélesség;
    // End of variables declaration//GEN-END:variables
	
	public static void main(String[] args)throws Throwable {
		Konfiguracio.inicializálás();
		JFrame a=new JFrame();
		a.getContentPane().add(new Oldalbeallitas_tlp());
		a.setSize(437, 460);
		a.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		a.show();
	}
	
	/**
	 * Registers ActionListener to receive events.
	 * @param listener The listener to register.
	 */
	public synchronized void addActionListener(java.awt.event.ActionListener listener) {
		
		if (listenerList == null ) {
			listenerList = new javax.swing.event.EventListenerList();
		}
		listenerList.add(java.awt.event.ActionListener.class, listener);
	}
	
	/**
	 * Removes ActionListener from the list of listeners.
	 * @param listener The listener to remove.
	 */
	public synchronized void removeActionListener(java.awt.event.ActionListener listener) {
		
		listenerList.remove(java.awt.event.ActionListener.class, listener);
	}
	
	/**
	 * Notifies all registered listeners about the event.
	 *
	 * @param event The event to be fired
	 */
	private void fireActionListenerActionPerformed(java.awt.event.ActionEvent event) {
		if (listenerList == null) return;
		Object[] listeners = listenerList.getListenerList();
		for (int i = listeners.length-2; i>=0; i-=2) {
			if (listeners[i]==java.awt.event.ActionListener.class) {
				((java.awt.event.ActionListener)listeners[i+1]).actionPerformed(event);
			}
		}
	}
}

